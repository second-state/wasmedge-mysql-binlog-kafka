name: Rust

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Install apt-get packages
      run: |
        sudo ACCEPT_EULA=Y apt-get update
        sudo ACCEPT_EULA=Y apt-get upgrade
        sudo apt-get install wget git curl software-properties-common build-essential
        
    - name: Start containers
      run: docker-compose -f "docker-compose.yml" up -d --build
    
    - name: Install wasm32-wasi
      run: rustup target add wasm32-wasi
      
    - name: Install WasmEdge
      run: |
        VERSION=0.12.1
        curl -sSf https://raw.githubusercontent.com/WasmEdge/WasmEdge/master/utils/install.sh | sudo bash -s -- --version=$VERSION -p /usr/local  
      
    - name: Build
      run: |
        cd mysql-binlog-kafka
        cargo build --target=wasm32-wasi --release
        nohup wasmedge --env "SLEEP_TIME=1000"  --env "SQL_USERNAME=root" --env "SQL_PASSWORD=password" --env "SQL_PORT=3306" --env "SQL_HOSTNAME=localhost" --env "SQL_DATABASE=mysql" --env "KAFKA_URL=localhost:9092" target/wasm32-wasi/release/mysql-binlog-kafka.wasm  > out.log 2>&1 &
        echo $! > wasmedge.pid
        sleep 15
      
    - name: Run tests
      run: |
        cd mysql-binlog-kafka
        wasmedge --env "DATABASE_URL=mysql://root:password@127.0.0.1:3306/mysql" sql-commands-test-wasm/insert.wasm
        cat out.log | grep "INSERT INTO payment (customer_id, amount, account_name)" && echo "Query executed successfully" || exit 1 
